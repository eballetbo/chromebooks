#!/usr/bin/bash

COMMAND="$1"
KERNEL_VERSION="$2"
BOOT_DIR_ABS="$3"
KERNEL_IMAGE="$4"

if [[ -d "$BOOT_DIR_ABS" ]]; then
    INITRD="initrd"
else
    BOOT_DIR_ABS="/boot"
    INITRD="initramfs-${KERNEL_VERSION}.img"
fi

KERNEL_VBOOT="kernel.vboot"
KERNEL_ITB="kernel.itb"
# Compression method being used by coreboot
compression="lz4"
kernel="${KERNEL_IMAGE##*/}-${KERNEL_VERSION}"
tmpdir="$(mktemp -d /tmp/chromebook-install.XXXX)"

vmlinuz_is_an_efi_application() {
    file "${1}" | grep -qi "PE32+ executable (EFI application)"
}

case "$COMMAND" in
    add)
        # Fail early if an initrd was not created for this kernel
        if [[ ! -f "$BOOT_DIR_ABS/$INITRD" ]]; then
            exit 77;
        fi

        cp -aT "${KERNEL_IMAGE}" "${BOOT_DIR_ABS}/${kernel}"

        if vmlinuz_is_an_efi_application "${KERNEL_IMAGE}"; then
            unzboot "${KERNEL_IMAGE}" "${tmpdir}/${kernel}"
        else
            cp -aT "${KERNEL_IMAGE}" "${tmpdir}/${kernel}.gz"
            gunzip "${tmpdir}/${kernel}.gz"
        fi
        ${compression} "${tmpdir}/${kernel}" "${tmpdir}/${kernel}.${compression}" 2> /dev/null

        #Fedora kernel generates these device tree
        #FIXME: other existing dtb in /boot/dtb/* doesn't work with the FIT image
        dtbs="-b /boot/dtb-${KERNEL_VERSION}/qcom/sc7180-trogdor-coachz-r3.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/qcom/sc7180-trogdor-lazor-r3-kb.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/qcom/sc7180-trogdor-wormdingler-rev1-inx.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/qcom/sc7180-trogdor-wormdingler-rev1-boe-rt5682s.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/qcom/sc7180-trogdor-wormdingler-rev1-inx-rt5682s.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/qcom/sc7180-trogdor-wormdingler-rev1-boe.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/rockchip/rk3399-gru-kevin.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/rockchip/rk3399-gru-scarlet-inx.dtb \
              -b /boot/dtb-${KERNEL_VERSION}/mediatek/mt8183-kukui-jacuzzi-kappa.dtb"

        mkimage -D "-I dts -O dtb -p 2048" -i "${BOOT_DIR_ABS}/${INITRD}" \
                -f auto -A arm64 -O linux -T kernel -C "${compression}" -a 0 \
                -d "${tmpdir}/${kernel}.${compression}" ${dtbs} \
                "${tmpdir}/${KERNEL_ITB}" > /dev/null

        #FIXME: do not take into account cmdline from /etc/kernel, the file installed by
        # the image doesn't match with what we want.
        #if [[ -f /etc/kernel/cmdline ]]; then
        #    BOOT_OPTIONS="$(tr -s "$IFS" ' ' </etc/kernel/cmdline)"
        if [[ -f /usr/lib/kernel/cmdline ]]; then
            BOOT_OPTIONS="$(tr -s "$IFS" ' ' </usr/lib/kernel/cmdline)"
        else
            BOOT_OPTIONS="$(tr -s "$IFS" '\n' </proc/cmdline)"
        fi

        cmdline="${tmpdir}"/boot_params

        echo "${BOOT_OPTIONS}" > "${cmdline}"

        vbutil_kernel --pack "${tmpdir}/${KERNEL_VBOOT}" \
                      --keyblock /usr/share/vboot/devkeys/kernel.keyblock \
                      --signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk \
                      --version 1 --config "${cmdline}" \
                      --bootloader "${cmdline}" \
                      --vmlinuz "${tmpdir}/${KERNEL_ITB}" \
                      --arch arm > /dev/null

        # Store the FIT image in a partition of type kernel, that is present in
        # the storage device of the partition that is used to mount the rootfs.
        rootdev="$(df -h | grep "/$" | cut -d ' ' -f1)"
        devnode="$(lsblk -spnlo name "${rootdev}" | tail -n1)"

        partitions="$(cgpt find -t kernel $devnode)"
        for part in ${partitions}; do
            dd if="${tmpdir}/${KERNEL_VBOOT}" of="${part}" bs=4M status=none
        done
        rm -rf "${tmpdir}"
        ;;
    remove)
        rm -f "${BOOT_DIR_ABS}/${kernel}" "${BOOT_DIR_ABS}/${INITRD}"
        ;;
    *)
        exit 0
esac
exit 0
